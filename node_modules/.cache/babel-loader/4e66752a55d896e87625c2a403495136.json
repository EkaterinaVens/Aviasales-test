{"ast":null,"code":"import initialState from './initialState';\nimport * as types from './types';\nconst ACTIVE_ALL_FILTERS = {\n  all: true,\n  withoutStops: true,\n  oneStop: true,\n  twoStops: true,\n  threeStops: true\n};\nconst INACTIVE_ALL_FILTERS = {\n  all: false,\n  withoutStops: false,\n  oneStop: false,\n  twoStops: false,\n  threeStops: false\n};\nconst filtersHandler = (prevFilters, filter) => {\n  if (filter.type === 'all') {\n    return filter.value ? ACTIVE_ALL_FILTERS : INACTIVE_ALL_FILTERS;\n  }\n  // Сливаем фильтры из стейта с входным фильтром\n  // и достаём их значения для последующей проверки\n  const filters = {\n    ...prevFilters,\n    [filter.type]: filter.value\n  };\n  const {\n    withoutStops,\n    oneStop,\n    twoStops,\n    threeStops\n  } = filters;\n  const filtersValues = Object.values({\n    withoutStops,\n    oneStop,\n    twoStops,\n    threeStops\n  });\n\n  // Если все фильтры включены\n  if (filtersValues.every(val => val)) {\n    return {\n      ...filters,\n      all: true\n    };\n  }\n  // Если все фильтры отключены\n  if (filtersValues.every(val => !val)) {\n    return {\n      ...filters,\n      all: false\n    };\n  }\n  // Если хотя бы один фильтр выключен\n  if (filtersValues.some(val => !val)) {\n    return {\n      ...filters,\n      all: false\n    };\n  }\n  return filters;\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_LOADED_TICKETS:\n      return {\n        ...state,\n        loadedTickets: [...state.loadedTickets, ...action.payload]\n      };\n    case types.SET_SORTING_TYPE:\n      return {\n        ...state,\n        sortingType: action.payload\n      };\n    case types.SET_FILTERS:\n      return {\n        ...state,\n        filters: filtersHandler(state.filters, action.payload)\n      };\n    case types.SET_READY_TICKETS:\n      return {\n        ...state,\n        readyTickets: action.payload\n      };\n    case types.SET_STATUS:\n      return {\n        ...state,\n        status: {\n          ...state.status,\n          ...action.payload\n        }\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["initialState","types","ACTIVE_ALL_FILTERS","all","withoutStops","oneStop","twoStops","threeStops","INACTIVE_ALL_FILTERS","filtersHandler","prevFilters","filter","type","value","filters","filtersValues","Object","values","every","val","some","rootReducer","state","action","SET_LOADED_TICKETS","loadedTickets","payload","SET_SORTING_TYPE","sortingType","SET_FILTERS","SET_READY_TICKETS","readyTickets","SET_STATUS","status"],"sources":["/Users/kate/Desktop/react-apps/s_aviasales-master/src/store/rootReducer.js"],"sourcesContent":["import initialState from './initialState';\nimport * as types from './types';\n\nconst ACTIVE_ALL_FILTERS = { all: true, withoutStops: true, oneStop: true, twoStops: true, threeStops: true };\nconst INACTIVE_ALL_FILTERS = { all: false, withoutStops: false, oneStop: false, twoStops: false, threeStops: false };\n\nconst filtersHandler = (prevFilters, filter) => {\n  if (filter.type === 'all') {\n    return filter.value ? ACTIVE_ALL_FILTERS : INACTIVE_ALL_FILTERS;\n  }\n  // Сливаем фильтры из стейта с входным фильтром\n  // и достаём их значения для последующей проверки\n  const filters = { ...prevFilters, [filter.type]: filter.value };\n  const { withoutStops, oneStop, twoStops, threeStops } = filters;\n  const filtersValues = Object.values({ withoutStops, oneStop, twoStops, threeStops });\n\n  // Если все фильтры включены\n  if (filtersValues.every((val) => val)) {\n    return { ...filters, all: true };\n  }\n  // Если все фильтры отключены\n  if (filtersValues.every((val) => !val)) {\n    return { ...filters, all: false };\n  }\n  // Если хотя бы один фильтр выключен\n  if (filtersValues.some((val) => !val)) {\n    return { ...filters, all: false };\n  }\n  return filters;\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_LOADED_TICKETS:\n      return { ...state, loadedTickets: [...state.loadedTickets, ...action.payload] };\n    case types.SET_SORTING_TYPE:\n      return { ...state, sortingType: action.payload };\n    case types.SET_FILTERS:\n      return { ...state, filters: filtersHandler(state.filters, action.payload) };\n    case types.SET_READY_TICKETS:\n      return { ...state, readyTickets: action.payload };\n    case types.SET_STATUS:\n      return { ...state, status: { ...state.status, ...action.payload } };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,gBAAgB;AACzC,OAAO,KAAKC,KAAK,MAAM,SAAS;AAEhC,MAAMC,kBAAkB,GAAG;EAAEC,GAAG,EAAE,IAAI;EAAEC,YAAY,EAAE,IAAI;EAAEC,OAAO,EAAE,IAAI;EAAEC,QAAQ,EAAE,IAAI;EAAEC,UAAU,EAAE;AAAK,CAAC;AAC7G,MAAMC,oBAAoB,GAAG;EAAEL,GAAG,EAAE,KAAK;EAAEC,YAAY,EAAE,KAAK;EAAEC,OAAO,EAAE,KAAK;EAAEC,QAAQ,EAAE,KAAK;EAAEC,UAAU,EAAE;AAAM,CAAC;AAEpH,MAAME,cAAc,GAAGA,CAACC,WAAW,EAAEC,MAAM,KAAK;EAC9C,IAAIA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;IACzB,OAAOD,MAAM,CAACE,KAAK,GAAGX,kBAAkB,GAAGM,oBAAoB;EACjE;EACA;EACA;EACA,MAAMM,OAAO,GAAG;IAAE,GAAGJ,WAAW;IAAE,CAACC,MAAM,CAACC,IAAI,GAAGD,MAAM,CAACE;EAAM,CAAC;EAC/D,MAAM;IAAET,YAAY;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAGO,OAAO;EAC/D,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAAC;IAAEb,YAAY;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAW,CAAC,CAAC;;EAEpF;EACA,IAAIQ,aAAa,CAACG,KAAK,CAAEC,GAAG,IAAKA,GAAG,CAAC,EAAE;IACrC,OAAO;MAAE,GAAGL,OAAO;MAAEX,GAAG,EAAE;IAAK,CAAC;EAClC;EACA;EACA,IAAIY,aAAa,CAACG,KAAK,CAAEC,GAAG,IAAK,CAACA,GAAG,CAAC,EAAE;IACtC,OAAO;MAAE,GAAGL,OAAO;MAAEX,GAAG,EAAE;IAAM,CAAC;EACnC;EACA;EACA,IAAIY,aAAa,CAACK,IAAI,CAAED,GAAG,IAAK,CAACA,GAAG,CAAC,EAAE;IACrC,OAAO;MAAE,GAAGL,OAAO;MAAEX,GAAG,EAAE;IAAM,CAAC;EACnC;EACA,OAAOW,OAAO;AAChB,CAAC;AAED,MAAMO,WAAW,GAAGA,CAACC,KAAK,GAAGtB,YAAY,EAAEuB,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACX,IAAI;IACjB,KAAKX,KAAK,CAACuB,kBAAkB;MAC3B,OAAO;QAAE,GAAGF,KAAK;QAAEG,aAAa,EAAE,CAAC,GAAGH,KAAK,CAACG,aAAa,EAAE,GAAGF,MAAM,CAACG,OAAO;MAAE,CAAC;IACjF,KAAKzB,KAAK,CAAC0B,gBAAgB;MACzB,OAAO;QAAE,GAAGL,KAAK;QAAEM,WAAW,EAAEL,MAAM,CAACG;MAAQ,CAAC;IAClD,KAAKzB,KAAK,CAAC4B,WAAW;MACpB,OAAO;QAAE,GAAGP,KAAK;QAAER,OAAO,EAAEL,cAAc,CAACa,KAAK,CAACR,OAAO,EAAES,MAAM,CAACG,OAAO;MAAE,CAAC;IAC7E,KAAKzB,KAAK,CAAC6B,iBAAiB;MAC1B,OAAO;QAAE,GAAGR,KAAK;QAAES,YAAY,EAAER,MAAM,CAACG;MAAQ,CAAC;IACnD,KAAKzB,KAAK,CAAC+B,UAAU;MACnB,OAAO;QAAE,GAAGV,KAAK;QAAEW,MAAM,EAAE;UAAE,GAAGX,KAAK,CAACW,MAAM;UAAE,GAAGV,MAAM,CAACG;QAAQ;MAAE,CAAC;IACrE;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}