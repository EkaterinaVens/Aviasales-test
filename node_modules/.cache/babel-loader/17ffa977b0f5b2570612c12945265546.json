{"ast":null,"code":"import * as types from './types';\nimport aviaService from '../services';\nexport const setStatus = value => {\n  return {\n    type: types.SET_STATUS,\n    payload: value\n  };\n};\nexport const changeFilter = filter => {\n  return {\n    type: types.SET_FILTERS,\n    payload: filter\n  };\n};\nexport const setReadyTickets = tickets => {\n  return {\n    type: types.SET_READY_TICKETS,\n    payload: tickets\n  };\n};\nexport const setLoadedTickets = tickets => {\n  return {\n    type: types.SET_LOADED_TICKETS,\n    payload: tickets\n  };\n};\nexport const setSortingType = value => {\n  return {\n    type: types.SET_SORTING_TYPE,\n    payload: value\n  };\n};\nexport const fetchTickets = () => async dispatch => {\n  try {\n    dispatch(setStatus({\n      isLoaded: false\n    }));\n    const searchId = await aviaService.getSearchId();\n    const data = await aviaService.getTickets(searchId);\n    dispatch(setLoadedTickets(data.tickets));\n    dispatch(setStatus({\n      isLoaded: true\n    }));\n    if (data.stop) {\n      dispatch(setStatus({\n        isStopped: true\n      }));\n    }\n  } catch (err) {\n    if (err.message === '500') {\n      dispatch(fetchTickets());\n    } else {\n      dispatch(setStatus({\n        isError: true\n      }));\n    }\n  }\n};\nexport const sortTickets = tickets => (dispatch, getState) => {\n  const {\n    sortingType\n  } = getState();\n  if (!tickets) {\n    return;\n  }\n  const sortedTickets = [...tickets];\n  process.nextTick(() => {\n    if (sortingType === 'cheapest') {\n      sortedTickets.sort((ticketA, ticketB) => ticketA.price - ticketB.price);\n    }\n    if (sortingType === 'quickest') {\n      sortedTickets.sort((ticketA, ticketB) => ticketA.segments[0].duration - ticketB.segments[0].duration + ticketA.segments[1].duration - ticketB.segments[1].duration);\n    }\n    dispatch(setReadyTickets(sortedTickets));\n  });\n};\nexport const filterTickets = () => (dispatch, getState) => {\n  const {\n    all,\n    withoutStops,\n    oneStop,\n    twoStops,\n    threeStops\n  } = getState().filters;\n  const filtersArr = Object.values({\n    withoutStops,\n    oneStop,\n    twoStops,\n    threeStops\n  });\n  let filteredTickets = [...getState().loadedTickets];\n  process.nextTick(() => {\n    if (!all) {\n      filteredTickets = filteredTickets.filter(ticket => {\n        return ticket.segments.every(segment => {\n          return filtersArr[segment.stops.length];\n        });\n      });\n    }\n    dispatch(sortTickets(filteredTickets));\n  });\n};","map":{"version":3,"names":["types","aviaService","setStatus","value","type","SET_STATUS","payload","changeFilter","filter","SET_FILTERS","setReadyTickets","tickets","SET_READY_TICKETS","setLoadedTickets","SET_LOADED_TICKETS","setSortingType","SET_SORTING_TYPE","fetchTickets","dispatch","isLoaded","searchId","getSearchId","data","getTickets","stop","isStopped","err","message","isError","sortTickets","getState","sortingType","sortedTickets","process","nextTick","sort","ticketA","ticketB","price","segments","duration","filterTickets","all","withoutStops","oneStop","twoStops","threeStops","filters","filtersArr","Object","values","filteredTickets","loadedTickets","ticket","every","segment","stops","length"],"sources":["/Users/kate/Desktop/react-apps/aviasales/src/store/actions.js"],"sourcesContent":["import * as types from './types';\nimport aviaService from '../services';\n\nexport const setStatus = (value) => {\n  return {\n    type: types.SET_STATUS,\n    payload: value,\n  };\n};\n\nexport const changeFilter = (filter) => {\n  return {\n    type: types.SET_FILTERS,\n    payload: filter,\n  };\n};\n\nexport const setReadyTickets = (tickets) => {\n  return {\n    type: types.SET_READY_TICKETS,\n    payload: tickets,\n  };\n};\n\nexport const setLoadedTickets = (tickets) => {\n  return {\n    type: types.SET_LOADED_TICKETS,\n    payload: tickets,\n  };\n};\n\nexport const setSortingType = (value) => {\n  return {\n    type: types.SET_SORTING_TYPE,\n    payload: value,\n  };\n};\n\nexport const fetchTickets = () => async (dispatch) => {\n  try {\n    dispatch(setStatus({ isLoaded: false }));\n    const searchId = await aviaService.getSearchId();\n    const data = await aviaService.getTickets(searchId);\n    dispatch(setLoadedTickets(data.tickets));\n    dispatch(setStatus({ isLoaded: true }));\n    if (data.stop) {\n      dispatch(setStatus({ isStopped: true }));\n    }\n  } catch (err) {\n    if (err.message === '500') {\n      dispatch(fetchTickets());\n    } else {\n      dispatch(setStatus({ isError: true }));\n    }\n  }\n};\n\nexport const sortTickets = (tickets) => (dispatch, getState) => {\n  const { sortingType } = getState();\n  if (!tickets) {\n    return;\n  }\n  const sortedTickets = [...tickets];\n\n  process.nextTick(() => {\n    if (sortingType === 'cheapest') {\n      sortedTickets.sort((ticketA, ticketB) => ticketA.price - ticketB.price);\n    }\n    if (sortingType === 'quickest') {\n      sortedTickets.sort(\n        (ticketA, ticketB) =>\n          ticketA.segments[0].duration -\n          ticketB.segments[0].duration +\n          ticketA.segments[1].duration -\n          ticketB.segments[1].duration\n      );\n    }\n    dispatch(setReadyTickets(sortedTickets));\n  });\n};\n\nexport const filterTickets = () => (dispatch, getState) => {\n  const { all, withoutStops, oneStop, twoStops, threeStops } = getState().filters;\n  const filtersArr = Object.values({ withoutStops, oneStop, twoStops, threeStops });\n  let filteredTickets = [...getState().loadedTickets];\n  process.nextTick(() => {\n    if (!all) {\n      filteredTickets = filteredTickets.filter((ticket) => {\n        return ticket.segments.every((segment) => {\n          return filtersArr[segment.stops.length];\n        });\n      });\n    }\n    dispatch(sortTickets(filteredTickets));\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}